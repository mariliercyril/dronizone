{
	"info": {
		"_postman_id": "b404ba14-5999-4fa2-bb1a-c3fbf49d7fe4",
		"name": "[fleet] get battery + de/activate",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/reset vider BD Drones + télémétrie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62e3da4f-2bff-47f8-ba07-2a46d562a722",
						"exec": [
							"/**",
							" * TESTS",
							" */",
							"// 200",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9004/fleet/drones/reset",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones",
						"reset"
					]
				}
			},
			"response": []
		},
		{
			"name": "add new Drone",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "425b6821-6729-4007-9165-334142f0a47e",
						"exec": [
							"function D () {",
							"    var randomD = {};",
							"    let enumBattery = [\"FULL\", \"OK\", \"LOW\"];",
							"    let enumStates = [\"AVAILABLE\", \"RECHARGING\", \"DELIVERING\", \"FORCED_RETURNING\"];",
							"    ",
							"    randomD.id = parseInt(new Date().getSeconds() + \"\" + new Date().getMilliseconds());",
							"    randomD.batteryState = enumBattery[Math.floor(Math.random() * enumBattery.length)];",
							"    randomD.status = enumStates[Math.floor(Math.random() * enumStates.length)];",
							"",
							"    return randomD;",
							"}",
							"",
							"// Save globally",
							"postman.setEnvironmentVariable(\"D\", D);",
							"",
							"// let myD = D();",
							"var parsedFunc = eval(\"(\" + environment.D +\")\");",
							"var myD = parsedFunc();",
							"// sauvegarder le Drone pour la suite du scénario ",
							"pm.globals.set(\"randomD\", JSON.stringify((myD)));",
							"pm.globals.set(\"postedDroneId\", myD.id);",
							"pm.globals.set(\"postedDroneBatteryState\", myD.batteryState);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ff7902cc-78dd-4ac2-9109-119652ed1f3f",
						"exec": [
							"// Save globally",
							"let postedD = JSON.parse(pm.globals.get(\"randomD\")),",
							"    responseD = JSON.parse(responseBody);",
							"",
							"/**",
							" * TESTS",
							" */",
							"// 200",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"// Check que les mêmes clefs sont présentes des deux côtés",
							"pm.test(\"le Drone est correctement reçu (attributs renseignés identiques)\", function () {",
							"    pm.expect(postedD.id).to.eql(responseD.id);",
							"    pm.expect(postedD.batteryState).to.eql(responseD.batteryState);",
							"    pm.expect(postedD.status).to.eql(responseD.status);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{randomD}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9004/fleet/drones",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones"
					]
				}
			},
			"response": []
		},
		{
			"name": "Drone's battery",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "094029e1-99bf-4a43-a459-dfad72343912",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "80a79c77-59ef-48fe-a4ef-ef34ca58e152",
						"exec": [
							"let batteryLevel = JSON.parse(responseBody);",
							"",
							"/**",
							" * TESTS",
							" */",
							"// 200",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Le niveau de batterie est le même que celui POST.\", function () {",
							"    pm.expect(batteryLevel).to.equal(pm.globals.get(\"postedDroneBatteryState\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9004/fleet/drones/:droneId/battery",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones",
						":droneId",
						"battery"
					],
					"variable": [
						{
							"key": "droneId",
							"value": "{{postedDroneId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "désactiver un Drone (envoyer à la recharge)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "094029e1-99bf-4a43-a459-dfad72343912",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "80a79c77-59ef-48fe-a4ef-ef34ca58e152",
						"exec": [
							"let drone = JSON.parse(responseBody);",
							"",
							"/**",
							" * TESTS",
							" */",
							"// 200",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Le Drone est en mode 'RECHARGING'\", function () {",
							"    pm.expect(drone[\"status\"]).to.equal(\"RECHARGING\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:9004/fleet/drones/:droneId/deactivate",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones",
						":droneId",
						"deactivate"
					],
					"variable": [
						{
							"key": "droneId",
							"value": "{{postedDroneId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "activer un Drone (retirer de la recharge)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "094029e1-99bf-4a43-a459-dfad72343912",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "80a79c77-59ef-48fe-a4ef-ef34ca58e152",
						"exec": [
							"let drone = JSON.parse(responseBody);",
							"",
							"/**",
							" * TESTS",
							" */",
							"// 200",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Le Drone est en mode 'AVAILABLE'\", function () {",
							"    pm.expect(drone[\"status\"]).to.equal(\"AVAILABLE\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:9004/fleet/drones/:droneId/activate",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones",
						":droneId",
						"activate"
					],
					"variable": [
						{
							"key": "droneId",
							"value": "{{postedDroneId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21ff4dfb-3f81-4184-a037-aa1c38cf512e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d9ce3432-dba3-4040-a9b9-b7043d90db18",
						"exec": [
							"// parfois, ça fail car cette requête arrive trop vite...\r",
							"setTimeout(function(){}, 500);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9004/fleet/drones",
					"host": [
						"localhost"
					],
					"port": "9004",
					"path": [
						"fleet",
						"drones"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}